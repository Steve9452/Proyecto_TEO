symbols = {
    "parentesis_izquierdo": "' ( '",
    "parentesis_derecho": "' ) '",
    "inicio_bloque": "' { '",
    "fin_bloque": "' } '",
    "corchete_izquierdo": "' [ '",
    "corchete_derecho": "' ] '",
    "const_int": "CONST_INT",
    "const_float": "CONST_FLOAT",
    "const_char": "CONST_CHAR",
    "aumentar": "' ++ '",
    "reducir": "' -- '",
    "suma": "' + '",
    "resta": "' - '",
    "multiplicacion": "' * '",
    "division": "' / '",
    "mod": "' % '",
    "and": "' && '",
    "or": "' || '",
    "diferente": "' != '",
    "igual": "' == '",
    "menor_que": "' < '",
    "mayor_que": "' > '",
    "id": "ID",
    "coma": "' , '",
    "fin_instruccion": "' ; '",
    "asignacion": "' = '",
    "eof": "eof",
    "main": "main",
    "int": "int",
    "void": "void",
    "return": "return",
    "float": "float",
    "char": "char",
    "struct": "struct",
    "if": "if",
    "else": "else",
    "do": "do",
    "while": "while",
    "for": "for",
    'break': 'break',
    "scanf": "scanf",
    "printf": "printf",
    "const_string": "'cadena de texto'",
    "puntero": "' * '",
}

getSymbol = {
    "parentesis_izquierdo": "(",
    "parentesis_derecho": ")",
    "inicio_bloque": "{",
    "fin_bloque": "}",
    "corchete_izquierdo": "[",
    "corchete_derecho": "]",
    "const_int": "1",
    "const_float": "1.0",
    "const_char": "'a'",
    "aumentar": "++",
    "reducir": "--",
    "suma": "+",
    "resta": "-",
    "multiplicacion": "*",
    "division": "/",
    "mod": "%",
    "and": "&&",
    "or": "||",
    "diferente": "!=",
    "igual": "==",
    "menor_que": "<",
    "mayor_que": ">",
    "id": "ID",
    "coma": ",",
    "fin_instruccion": ";",
    "asignacion": "=",
    "eof": "$",
    "main": "main",
    "int": "int",
    "void": "void",
    "return": "return",
    "float": "float",
    "char": "char",
    "struct": "struct",
    "if": "if",
    "else": "else",
    "do": "do",
    "while": "while",
    "for": "for",
    'break': 'break',
    "vacia": "",
    "scanf": "scanf",
    "printf": "printf",
    "const_string": "\"\"",
}


